liorf:
  saveBagFlag: true
  # Topics
  pointCloudTopic: "velodyne_points"               # Point cloud data
  imuTopic: "imudata"                         # IMU data
  odomTopic: "odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
  gpsTopic: "GPSmsg"                   # GPS odometry topic from navsat, see module_navsat.launch file

  # Frames
  lidarFrame: "velodyne"
  baselinkFrame: "base_link"
  odometryFrame: "odom"
  mapFrame: "map"
  localMapFrame: "local_map"

  # Local Map Settings
  localMapKeyFramesNumber: 50
  localMapFront: 70.0
  localMapLeft: 40.0
  localMapBack: 20.0
  localMapRight: 40.0
  useDownSamplingLocalMap: true
  localMappingSurfLeafSize: 0.01                     # default: 0.4 - outdoor, 0.2 - indoor
  useRandomDownSampling: false
  localMappingSamplingInterval: 3
  useRemovingOutliers: false
  meanK: 10
  stddevThreshold: 1.0

  # GPS Settings
  useImuHeadingInitialization: true           # if using GPS data, set to "true"
  useGpsElevation: false                      # if GPS elevation is bad, set to "false"
  useGpsLocation: false                      # if GPS location is bad, set to "false"
  maxMovementThreshold: 50.0                        # m^2, threshold for using GPS data
  gpsCovThreshold: 10.0                        # m^2, threshold for using GPS data
  poseCovThreshold: 0.5                      # m^2, threshold for using GPS data
  gpsDistanceFrequency: 1                   # m, distance frequency to add GPS default: 2
  pubLocalizationFrequency: 50
  gpsWaitingTimeThreshold: 2.0
  switchGpsData: false                      # if switch between /gpsdata and /liorf/gpsdata, set to "true"
  gpsDataWaitingTimeThreshold: 10.0        # s, 10.0 if switchGpsData set to "false", or 30.0 if switchGpsData set to "true"
  
  # Export settings
  savePCD: false                              # https://github.com/TixiaoShan/LIO-SAM/issues/3
  savePCDDirectory: "/Downloads/LOAM/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation

  # Sensor Settings
  sensor: livox                            # lidar sensor type, 'velodyne' or 'ouster' or 'livox' or 'robosense'
  N_SCAN: 80                                  # number of lidar channel (i.e., Velodyne/Ouster: 16, 32, 64, 128, Livox Horizon: 6)
  Horizon_SCAN: 1800                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048, Livox Horizon: 4000)
  point_filter_num: 3                         # default: 3. Downsample your data if too many points(point). e.g., 16: 1, 32: 5, 64: 8 default: 8
  downsampleRate: 5                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1 default: 5
  lidarMinRange: 0.0                          # default: 1.0, minimum lidar range to be used
  lidarMinFront: 2.0                          # default: 1.0, minimum lidar range to be used
  lidarMinBack: 10.0                          # default: 1.0, minimum lidar range to be used
  lidarMinLeft: 2.0                          # default: 1.0, minimum lidar range to be used
  lidarMinRight: 2.0                          # default: 1.0, minimum lidar range to be used
  lidarMaxRange: 100.0                       # default: 1000.0, maximum lidar range to be used
  lidarMaxIntensity: 100.0                       # default: 1000.0, maximum lidar range to be used

  # IMU Settings
  imuType: 1                                  # 0: 6-axis  1: 9-axis
  imuRate: 50.0                              # default: 200
  imuAccNoise: 1.9093596752464623e-03
  imuGyrNoise: 1.2125017343081773e-04
  imuAccBiasN: 5.7215470125191409e-04
  imuGyrBiasN: 2.4565438685088847e-06
  imuGravity: 9.85511 # liji :to be calibrated
  imuRPYWeight: 0.01

  # imuAccNoise: 8.1330537434371481e-03
  # imuGyrNoise: 7.4266825125507141e-03
  # imuAccBiasN: 1.2123362494392119e-04
  # imuGyrBiasN: 8.6572985145653080e-05
  # imuGravity: 9.85511 # liji :to be calibrated
  # imuRPYWeight: 0.01

  # Extrinsics: T_lb (lidar -> imu)
  extrinsicTrans: [0, 0, 0]
  # extrinsicTrans: [-8.086759e-01, 3.195559e-01, -7.997231e-01]
  extrinsicRot: [1, 0,  0,
                 0,  1, 0,
                 0,  0,  1] 
  # PKU RS1
  extrinsicTrans: [2.85328,-3.0527,-1.30591]
  extrinsicRot: [ 0.73885912,0.19077786,0.64629019,
 -0.42170244,0.87897602,0.2226392,
 -0.52559895,-0.43704116,0.72989093]

  # This parameter is set only when the 9-axis IMU is used, but it must be a high-precision IMU. e.g. MTI-680
  extrinsicRPY: [1, 0,  0,
                 0,  1, 0,
                 0,  0,  1]
  # PKU RS1
  extrinsicRPY: [ 0.73885912,0.19077786,0.64629019,
 -0.42170244,0.87897602,0.2226392,
 -0.52559895,-0.43704116,0.72989093]
    # extrinsicRot: [9.99999998e-01, -3.25602390e-07,  5.51350946e-05,
  #               3.49065850e-07,  9.99999909e-01, -4.25563599e-04,
  #             -5.51349510e-05,  4.25563618e-04,  9.99999908e-01] # 6t matrices
    # extrinsicRPY: [9.99999998e-01, -3.25602390e-07,  5.51350946e-05,
  #               3.49065850e-07,  9.99999909e-01, -4.25563599e-04,
  #             -5.51349510e-05,  4.25563618e-04,  9.99999908e-01] # 6t matrices

  # LOAM feature threshold
  edgeThreshold: 1.0
  surfThreshold: 0.1
  edgeFeatureMinValidNum: 5
  surfFeatureMinValidNum: 50
  
  # voxel filter paprams
  mappingSurfLeafSize: 0.01                      # default: 0.4 - outdoor, 0.2 - indoor

  # robot motion constraint (in case you are using a 2D robot)
  z_tollerance: 1000                            # meters
  rotation_tollerance: 1000                     # radians

  # CPU Params
  numberOfCores: 12                            # number of cores for mapping optimization default: 12
  mappingProcessInterval: 0.0                  # seconds, regulate mapping frequency

  # Surrounding map
  surroundingkeyframeAddingDistThreshold: 1.0   # meters, regulate keyframe adding threshold
  surroundingkeyframeAddingAngleThreshold: 0.2  # radians, regulate keyframe adding threshold
  surroundingKeyframeDensity: 2.0               # meters, downsample surrounding keyframe poses   
  surroundingKeyframeSearchRadius: 50.0         # meters, within n meters scan-to-map optimization (when loop closure disabled)
  surroundingKeyframeMapLeafSize: 0.5           # downsample local map point cloud

  # Loop closure
  loopClosureEnableFlag: false
  loopClosureFrequency: 0.2                     # Hz, regulate loop closure constraint add frequency ,Default:1
  surroundingKeyframeSize: 50                   # submap size (when loop closure enabled)
  historyKeyframeSearchRadius: 15.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
  historyKeyframeSearchTimeDiff: 30.0           # seconds, key frame that is n seconds older will be considered for loop closure
  historyKeyframeSearchNum: 25                  # number of hostory key frames will be fused into a submap for loop closure
  loopClosureICPSurfLeafSize: 0.5               # downsample icp point cloud  
  historyKeyframeFitnessScore: 0.3              # icp threshold, the smaller the better alignment

  # Visualization
  globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
  globalMapVisualizationPoseDensity: 10.0       # meters, global map visualization keyframe density
  globalMapVisualizationLeafSize: 1.0           # meters, global map visualization cloud density




# Navsat (convert GPS coordinates to Cartesian)
navsat:
  frequency: 50
  wait_for_datum: false
  delay: 0.0
  magnetic_declination_radians: 0
  yaw_offset: 0
  zero_altitude: true
  broadcast_utm_transform: false
  broadcast_utm_transform_as_parent_frame: false
  publish_filtered_gps: false

# EKF for Navsat
ekf_gps:
  publish_tf: false
  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: odom

  frequency: 50
  two_d_mode: false
  sensor_timeout: 0.01
  # -------------------------------------
  # External IMU:
  # -------------------------------------
  imu0: imu_correct
  # make sure the input is aligned with ROS REP105. "imu_correct" is manually transformed by myself. EKF can also transform the data using tf between your imu and base_link
  imu0_config: [false, false, false,
                true,  true,  true,
                false, false, false,
                false, false, true,
                true,  true,  true]
  imu0_differential: false
  imu0_queue_size: 50 
  imu0_remove_gravitational_acceleration: true
  # -------------------------------------
  # Odometry (From Navsat):
  # -------------------------------------
  odom0: odometry/gps
  odom0_config: [true,  true,  true,
                 false, false, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  odom0_differential: false
  odom0_queue_size: 10

  #                            x     y     z     r     p     y   x_dot  y_dot  z_dot  r_dot p_dot y_dot x_ddot y_ddot z_ddot
  process_noise_covariance: [  1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    10.0, 0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0.03, 0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0.03, 0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0.1,  0,     0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0.25,  0,     0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0.25,  0,     0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0.04,  0,    0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0.01, 0,    0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0.01, 0,    0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0.5,  0,    0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0.01, 0,      0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0.01,   0,
                               0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0.015]
